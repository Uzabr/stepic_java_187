/**
 * Created by ipetrash on 10.09.2016.
 */

public class Main {

//    Реализуйте метод flipBit, изменяющий значение одного бита заданного целого числа на противоположное.
//    Данная задача актуальна, например, при работе с битовыми полями.
//
//    Договоримся, что биты нумеруются от младшего (индекс 1) к старшему (индекс 32).
//    Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода
//    добавит проверяющая система.
//
//    Sample Input:
//            0 1
//
//    Sample Output:
//            1

// Update:
//    Почитал про xor, в битовом представлении xor (или ^), меняет значение бита на противоположеное если попадается
//    разряд 1 для второй части:
//            0b111 ^ 0b001 = 0b110
//            0b111 ^ 0b011 = 0b100
//            0b111 ^ 0b010 = 0b101
//
//    Для данной задачи нужно заменить только 1 бит в указанной позиции, т.е.:
//    bitIndex = 1, тогда получится 0b1
//    bitIndex = 2, тогда получится 0b10
//    bitIndex = 3, тогда получится 0b100
//
//    Получившиеся значения -- степень двойки, которые можно получить или через метод Math.pow, или через битовый
//    сдвиг:
//    1 << 0 = 2 ** 0 = 1 = 0b0001
//    1 << 1 = 2 ** 1 = 2 = 0b0010
//    1 << 2 = 2 ** 2 = 4 = 0b0100
//    1 << 3 = 2 ** 3 = 8 = 0b1000
//
//    Т.е., если мы хотим поменять значение 3-его бита на противоположное, тогда выполняем следующее:
//    Создаем число с значением 1 в нужном разряде: 1 << 2 (0b0100 = 4, получилось 2, т.к. разряды считаются
//    c 0, т.е. 1 бит -- 1 << 0, 2 бит -- 1 << 1 и т.д.)
//    Выполняем xor (исключающее или):
//    <число> ^ 1 << 2
//
//    Пример:
//    8 ^ (1 << 2)
//    0b1000 ^ 0b0100 = 0b1100 = 12
    public static int flipBit(int value, int bitIndex) {
        return value ^ (1 << bitIndex - 1);
    }

    public static void main(String[] args) {
        int result = flipBit(0, 1);
        System.out.println(result);

        result = flipBit(-1, 1);
        System.out.println(result);

        result = flipBit(8, 3);
        System.out.println(result);
    }
}
